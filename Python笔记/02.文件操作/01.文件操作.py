"""
open()
    控制文件读写内容的模式: t 和 b
        强调: t 和 b 不能单独使用,必须配合 r/w/a使用

        t: 文本(默认模式)
            1. 读写都以str(Unicode)为单位
            2. 必须是文件文件
            3. 必须指定encoding='utf-8'
            4. 必须指定字符编码,即必须指定encoding参数

        b: 二进制(bytes)
            1. 不做任何转换可直接读入内存
            2. 读写都以bytes为单位
            3. 可以针对所有文件,但处理文本文件不如直接使用t模式简便
            4. 一定不能指定encoding参数


    控制文件读写操作的模式(都需要与 t或b 连用):
        r:  只读模式(默认模式)
            当文件不存在时报错,当文件存在时文件指针在最开始位置
            f.read() 将文件内容一次性全部读取到内存

        w:  只写模式
            当文件不存在时会创建空文件,当文件存在时会清空文件,指针在开始位置
            在以w模式打开文件没有关闭的情况下,连续写入新的内容总是跟在旧内容之后;如果重新以w模式打开文件,则会清空文件内容
            f.write('Hello Python')

        a:  只追加写模式
            只追加写在文件不存在时会创建空文档,指针在开始位置;在文件存在时文件指针跳到末尾;文件写入时追加到末尾

        +:  不能单独使用,必须配合r,w,a联合使用(了解)
            r+: 可读可写,但文件不存在直接报错
            w+: 可读可写,文件不存在创建新文件,存在则清空写入
            a+: 可读可写,文件不存在创建新文件,存在则追加写入

        x:  只写模式,不可读,文件不存在创建,存在则报错(了解)



    文件操作流程:
        打开文件:
            f = open(r'文件路径', mode='模式', encoding='utf-8')

        操作文件: 读/写文件
            print(f.read())

        关闭文件:
            f.close()  # 回收操作系统资源,才是变量f存在,但不能再做续写操作
"""